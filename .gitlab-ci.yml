stages:
  - test:unit
  - docker:dev
  - docker:staging
  - docker:uat
  - docker:prod
  - docker:hotfix
  - scan:image
  - deploy:dev
  - deploy:staging
  - deploy:uat
  - deploy:prod
  - deploy:hotfix

variables:
  SERVICE_NAME: 'nodejs-api'
  DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE/$SERVICE_NAME
  TRIVY_NO_PROGRESS: "true"
  TRIVY_CACHE_DIR: ".trivycache/"

unit-test:
  tags:
    - gitlab-runner-autoscale
  stage: test:unit
  image: node:22-alpine
  script:
    - npm ci
    - npm run test:ci
  artifacts:
    paths:
      - coverage/junit.xml
    reports:
      junit: coverage/junit.xml
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev" && $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - when: never
  
docker-build-dev:
  tags:
    - gitlab-runner-autoscale
  stage: docker:dev
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login git.7solutions.co.th -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - DEV_IMAGE=$(git log --format="%h" -n 1 --abbrev=8 | tail -n 1)
  script:
    - docker build -t $DOCKER_IMAGE_NAME:dev-$DEV_IMAGE .
    - docker push $DOCKER_IMAGE_NAME:dev-$DEV_IMAGE
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev" && $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - when: never

docker-build-staging:
  tags:
    - gitlab-runner-autoscale
  stage: docker:staging
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login git.7solutions.co.th -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - DEV_IMAGE=$(git log --format="%h" -n 2 --abbrev=8 | tail -n 1)
  script:
    - docker pull $DOCKER_IMAGE_NAME:dev-$DEV_IMAGE
    - docker image tag $DOCKER_IMAGE_NAME:dev-$DEV_IMAGE $DOCKER_IMAGE_NAME:stg-$DEV_IMAGE
    - docker push $DOCKER_IMAGE_NAME:stg-$DEV_IMAGE
  rules:
    - if: '$CI_COMMIT_BRANCH == "staging" && $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - when: never

docker-build-uat:
  tags:
    - gitlab-runner-autoscale
  stage: docker:uat
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login git.7solutions.co.th -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - DEV_IMAGE=$(git log --format="%h" -n 3 --abbrev=8 | tail -n 1)
  script:
    - docker pull $DOCKER_IMAGE_NAME:dev-$DEV_IMAGE
    - docker image tag $DOCKER_IMAGE_NAME:dev-$DEV_IMAGE $DOCKER_IMAGE_NAME:uat-$DEV_IMAGE
    - docker push $DOCKER_IMAGE_NAME:uat-$DEV_IMAGE
  rules:
    - if: '$CI_COMMIT_BRANCH == "uat" && $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - when: never

docker-build-prod:
  tags:
    - gitlab-runner-autoscale
  stage: docker:prod
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login git.7solutions.co.th -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - DEV_IMAGE=$(git log --format="%h" -n 4 --abbrev=8 | tail -n 1)
  script:
    - docker pull $DOCKER_IMAGE_NAME:dev-$DEV_IMAGE
    - docker image tag $DOCKER_IMAGE_NAME:dev-$DEV_IMAGE $DOCKER_IMAGE_NAME:$CI_COMMIT_TAG
    - docker push $DOCKER_IMAGE_NAME:$CI_COMMIT_TAG
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "uat" && CI_COMMIT_TAG'
      when: on_success
    - when: never

docker-build-hotfix:
  tags:
    - gitlab-runner-autoscale
  stage: docker:hotfix
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login git.7solutions.co.th -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
  script:
    - docker build -t $DOCKER_IMAGE_NAME:$CI_COMMIT_TAG .
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ "/^hotfix\/.+$" && CI_COMMIT_TAG'
      when: on_success
    - when: never

scan-image:
  tags:
    - gitlab-runner-autoscale
  stage: scan:image
  image: debian:latest
  before_script:
    - apt-get update; apt-get install curl -y;
    - export TRIVY_VERSION=$(curl -s "https://api.github.com/repos/aquasecurity/trivy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/') 
    - echo $TRIVY_VERSION
    - curl -L https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz | tar -zxvf - 
    - DEV_IMAGE=$(git log --format="%h" -n 1 --abbrev=8 | tail -n 1)
  script:
    - ./trivy image --exit-code 0 --format template --template "@contrib/gitlab.tpl" -o gl-container-scanning-report.json $DOCKER_IMAGE:dev$DEV_IMAGE
    - cat gl-container-scanning-report.json
  cache:
    paths:
      - .trivycache/ 
  dependencies:
    - docker-build-dev
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: on_success
    - when: never

deploy-dev:
  tags:
    - gitlab-runner-autoscale
  tags:
    - gitlab-runner-autoscale
  stage: deploy-dev
  script:
    - echo "Deploy DEV"
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev" && $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - when: never

deploy-staging:
  tags:
    - gitlab-runner-autoscale
  stage: deploy-staging
  before_script:
    DEV_IMAGE=$(git log --format="%h" -n 2 --abbrev=8 | tail -n 1)
  script:
    - echo "Deploy Staging"
  rules:
    - if: '$CI_COMMIT_BRANCH == "staging" && $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - when: never
  
deploy-uat:
  tags:
    - gitlab-runner-autoscale
  stage: deploy-uat
  before_script:
    DEV_IMAGE=$(git log --format="%h" -n 3 --abbrev=8 | tail -n 1)
  script:
    - echo "Deploy UAT"
  rules:
    - if: '$CI_COMMIT_BRANCH == "uat" && $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - when: never

deploy-prod:
  tags:
    - gitlab-runner-autoscale
  stage: deploy-prod
  before_script:
    DEV_IMAGE=$(git log --format="%h" -n 4 --abbrev=8 | tail -n 1)
  script:
    - echo "Deploy Prod"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG && $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: on_success
    - when: never